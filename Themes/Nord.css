meta {
  -theme-interface-style: dark;
  -theme-vibrancy: none;
  -theme-accent-color: false;
}

/*
 * Copyright (c) 2016-present Arctic Ice Studio <development@arcticicestudio.com>
 * Copyright (c) 2016-present Sven Greb <development@svengreb.de>
 *
 * Project:	Nord
 * Version:	0.2.0
 * Repository: https://github.com/arcticicestudio/nord
 * License:	MIT
 * References:
 *   https://www.w3.org/TR/css-variables
 *   https://www.w3.org/TR/selectors/#root-pseudo
 *   https://drafts.csswg.org/css-variables
 *   https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables
 *   http://warpspire.com/kss
 *   https://github.com/kss-node/kss-node
 */
/*
An arctic, north-bluish color palette.
Created for the clean- and minimal flat design pattern to achieve a optimal focus
and readability for code syntax highlighting and UI.
It consists of a total of sixteen, carefully selected, dimmed pastel colors for a
eye-comfortable, but yet colorful ambiance.
*/

/* Reference colours from the official Nord palette (v0.2.0)
:root {
  --nord0:  #2e3440;
  --nord1:  #3b4252;
  --nord2:  #434c5e;
  --nord3:  #4c566a;
  --nord4:  #d8dee9;
  --nord5:  #e5e9f0;
  --nord6:  #eceff4;
  --nord7:  #8fbcbb;
  --nord8:  #88c0d0;
  --nord9:  #81a1c1;
  --nord10: #5e81ac;
  --nord11: #bf616a;
  --nord12: #d08770;
  --nord13: #ebcb8b;
  --nord14: #a3be8c;
  --nord15: #b48ead;
}
*/

/*
 * Window styles
 */
meta.window {
  background-color: #2e3440; /* nord0 */
  color: #eceff4; /* nord6 */
}
meta.titlebar {
  color: #d8dee9; /* nord4 */
  background: linear-gradient(#4c566a, #3b4252);
  border-color: #5e81ac; /* nord10 */
}
meta.titlebar.inactive {
  background-color: #4c566a; /* nord3 */
}

meta.button {
  background: linear-gradient(#4c566a, #3b4252);
  border-style: solid;
  border-image: linear-gradient(45deg, #5e81ac, #88c0d0) 1;
  color: #d8dee9; /* nord4 */
}
meta.button.highlighted {
  background-color: #4c566a; /* nord3 */
  color: #e5e9f0; /* nord5 */
}
meta.button.selected {
  background-color: #2e3440; /* nord0 */
  color: #e5e9f0; /* nord5 */
}
meta.button.highlighted.selected {
  background-color: #4c566a; /* nord3 */
  color: #e5e9f0; /* nord5 */
}
meta.button.disabled {
  background: linear-gradient(#2e3440, #3b4252);
  border-style: solid;
  border-image: linear-gradient(45deg, #4c566a, #2e3440) 1;
  color: #81a1c1; /* nord9 */
}
meta.textfield {
  background-color: #4c566a; /* nord3 */
  border-color: #b48ead; /* nord15 */
}
meta.accent {
  color: #4c566a; /* nord3 */
}

/*
 * Document styles
 */
meta.document {
  background-color: #2e3440; /* nord0 */
  color: #eceff4; /* nord6 */
}

meta.document.button {
  background: linear-gradient(#4c566a, #3b4252);
  border-style: solid;
  border-image: linear-gradient(45deg, #5e81ac, #88c0d0) 1;
  color: #d8dee9; /* nord4 */
}
meta.document.button.disabled {
  background: linear-gradient(#2e3440, #3b4252);
  border-style: solid;
  border-image: linear-gradient(45deg, #4c566a, #2e3440) 1;
  color: #81a1c1; /* nord9 */
}
meta.document.button.highlighted {
  background-color: #4c566a; /* nord3 */
  color: #e5e9f0; /* nord5 */
}
meta.document.button.selected {
  background-color: #2e3440; /* nord0 */
  color: #e5e9f0; /* nord5 */
}
meta.document.button.highlighted.selected {
  background-color: #4c566a; /* nord3 */
  color: #e5e9f0; /* nord5 */
}
meta.document.textfield {
  background-color: #4c566a; /* nord3 */
  border-color: #b48ead; /* nord15 */
}

/* Text */
meta.text {
  background-color: #2e3440; /* nord0 */
  color: #e5e9f0; /* nord6 */
}
meta.text.invisible {
  color: #4c566a; /* nord3 */
}
meta.text.selected {
/*  color: #333a4c; /* #434c5e */
  background-color: #4c566a; /* nord3 */
  color: #e5e9f0; /* nord5 */
}
/* Cursor */
meta.cursor {
  color: #d8dee9; /* nord4 */
}
/* Indentation Guides */
meta.indentguide {
  color: #4c566a; /* nord3 */
}
/* Gutter */
meta.gutter {
}
meta.gutter.selected {
  color: #434c5e;
}

/*
 * Syntax styles
 */
/* keyword: reserved words in a language */
/* keyword.construct: construct words, such as `function`, `class`, `interface`, `type` */
/* keyword.condition: condition words, such as `if`, `while`, `try`, `switch`, `case` */
/* keyword.modifier: modifier words, such as `async`, `public`, `from`, `in`, `as` */
/* keyword.operator: operator words, such as and, or, not */
keyword,
keyword.construct,
keyword.condition,
keyword.modifier,
keyword.operator
{
  color: #81a1c1; /* nord9 */
  text-decoration-line: none;
  text-decoration: none;
  font-weight: normal;
}
/* keyword.self: type-referential words, such as self, this, super */
keyword.self {
  color: #d8dee9; /* nord4 */
}

comment { /* single and multiline comments */
  color: #de3e32; /* make comments more visible than common Nord-derived themes */
  font-style: normal;
  font-weight: normal;
}
processing { /* processing directives, such as C preprocessor commands */
  color: #88c0d0; /* nord8 */
  font-weight: normal;
}
declaration { /* declarative elements, such as XML and HTML doctypes */
  color: #5e81ac; /* nord10 */
}
bracket { /* paired brackets for syntactic scope and separation */
/*  color: #4c566a; /* nord3 */
  color: #eceff4; /* nord6 */
}
operator,
keyword.operator { /* operator words, such as `and`, `or`, `not` */
  color: #81a1c1; /* nord9 */
}
invalid {
  background-color: #bf616a; /* nord11 */
  color: #d8dee9; /* nord4 */
  font-weight: normal;
}
link {
  color: #cfd6e4;
  text-decoration: underline;
}

/* Values */
value.boolean {
  color: #b48ead; /* nord15 */
}
value.null {
  color: #b48ead; /* nord15 */
}
value.number {
  color: #b48ead; /* nord15 */
}
value.entity {
  color: #d08770; /* nord12 */
}
value.symbol {
  color: #a3be8c; /* nord14 */
}

/* Identifiers
identifier.type.class: classes
identifier.type.protocol: protocols
identifier.type.enum: enumerations
identifier.type.union: unions
identifier.type.struct: structs
identifier.core: applyable to any of the above, indicates a “core” (built-in) symbol
*/
identifier.type,
identifier.type.class,
identifier.type.protocol,
identifier.type.enum,
identifier.type.union,
identifier.type.struct {
  color: #5e81ac; /* nord10 */
  text-decoration: none;
  font-weight: normal;
}
identifier.constant {
  color: #d08770; /* nord12 */
}
identifier.global,
identifier.variable {
  color: #d8dee9; /* nord4 */
}
identifier.decorator {
  color: #a3be8c; /* nord14 */
}
identifier.property,
identifier.function,
identifier.core.function,
identifier.method {
  color: #88c0d0; /* nord8 */
  text-decoration: none;
}
identifier.key {
  color: #8fbcbb; /* nord7 */
}
identifier.argument {
  color: #a3be8c; /* nord14 */
}

/* Strings */
string {
  color: #a3be8c; /* nord14 */
}
string.key {
  color: #a3be8c; /* nord14 */
}
string-template {
  color: #a3be8c; /* nord14 */
}
string-template.value {
  color: #a3be8c; /* nord14 */
}
regex {
  color: #ebcb8b; /* nord13 */
}
regex.escaped {
  color: #d08770; /* nord12 */
}
cdata {
  color: #4c566a; /* nord3 */
  font-weight: bold;
}

/* Markup */
markup.heading {
  color: #5e81ac; /* nord10 */
}
markup.line {
  color: #d8dee9; /* nord4 */
}
markup.bold {
  color: #81a1c1; /* nord9 */
  font-weight: bold;
}
markup.italic {
  color: #a3be8c; /* nord14 */
  font-style: italic;
}
markup.strikethrough {
  color: #81a1c1; /* nord9 */
  text-decoration-line: line-through;
}
markup.list.item {
  color: #8fbcbb; /* nord7 */
}
markup.code {
  color: #d08770; /* nord12 */
  background-color: #4c566a; /* nord3 */
}
markup.link { /* as link above */
  text-decoration: underline;
}

/* Types */
definition.class class.name,
definition.type type.name,
definition.package package.name,
definition.protocol protocol.name,
definition.enum enum.name,
definition.union union.name,
definition.struct struct.name {
  font-weight: bold;
  color: #5e81ac; /* nord10 */
}

/* Members */
definition.property property.name,
definition.function function.name,
definition.method method.name {
  color: #a3be8c; /* nord14 */
}

/* Tags */
tag {
  color: #81a1c1; /* nord9 */
}
tag.framework {
  color: #5e81ac; /* nord10 */
}
tag.attribute.name {
  color: #8fbcbb; /* nord7 */
}
tag.attribute.value {
  color: #a3be8c; /* nord14 */
}
tag.attribute.value.link {
  text-decoration: underline;
}

/* Styles */
style.at {
  color: #d08770; /* nord12 */
  font-style: normal;
}
style.selector.element {
  font-weight: bold;
}
style.selector.identifier.id {
  color: #81a1c1; /* nord9 */
}
style.selector.identifier.class {
  color: #8fbcbb; /* nord7 */
}
style.selector.pseudoclass {
  color: #a3be8c; /* nord14 */
}
style.selector.pseudoelement {
  font-weight: normal;
}
style.attribute, style.attribute.name {
  color: #5e81ac; /* nord10 */
}
style.value.number {
  color: #a5789e; /* #b48ead */
}
style.value.color, style.value.color.hex {
  color: #a5789e; /* #b48ead */
}
style.value.color.named {
  color: #b48ead; /* nord15 */
}
style.value.keyword {
  color: #6d8eb5; /* #5e81ac */
}

/* Terminal */
terminal.black {
  color: #2e3440; /* nord0 */
}
terminal.red {
  color: #bf616a; /* nord11 */
}
terminal.green {
  color: #a3be8c; /* nord14 */
}
terminal.yellow {
  color: #ebcb8b; /* nord13 */
}
terminal.blue {
  color: #5e81ac; /* nord10 */
}
terminal.magenta {
  color: #b48ead; /* nord15 */
}
terminal.cyan {
  color: #88c0d0; /* nord8 */
}
terminal.white {
  color: #eceff4; /* nord6 */
}
terminal.bright-black {
  color: #4c566a; /* nord3 */
}
terminal.bright-red {
  color: #bf616a; /* nord11 */
}
terminal.bright-green {
  color: #a3be8c; /* nord14 */
}
terminal.bright-yellow {
  color: #ebcb8b; /* nord13 */
}
terminal.bright-blue {
  color: #5e81ac; /* nord10 */
}
terminal.bright-magenta {
  color: #b48ead; /* nord15 */
}
terminal.bright-cyan {
  color: #88c0d0; /* nord8 */
}
terminal.bright-white {
  color: #e5e9f0; /* nord5 */
}

/**
 * special support for dennisosaj's advancedPHP plugin (gwyneth 20200127)
 * https://extensions.panic.com/extensions/dennisosaj/dennisosaj.advancedPHP/
 **/

/* Statics */
advphp.static.condition {
  /* if, else, elseif, foreach, ... */
  color: #81a1c1; /* nord9 */
  }
advphp.static.processor {
  /* echo, return, print, ... */
  color: #88c0d0; /* nord8 */
}
advphp.static.declaration {
  /* new, public, private, ... */
  color: #5e81ac; /* nord10 */
}
advphp.static.import {
  /* include, require, ... */
  color: #75b3c7; /* nord8 */
}
advphp.static.constant {
  /* __DIR__, __METHOD__, ... */
  color: #d8dee9; /* nord4 */
}
advphp.static.wordOperator {
  /* AND, OR, XOR, ... */
  color: #81a1c1; /* nord9 */
}

/* CURL Keywords */
advphp.curl.keywords {
  /* CURLOPT_HEADER, CURLOPT_PROXY, ... */
  color: #88c0d0; /* nord8 */
}

/* SQL Keywords */
advphp.sql.keywords {
  /* SELECT, FROM, WHERE, ... */
  color: #88c0d0; /* nord8 */
}

/* Syntax */
advphp.operator {
  /* +, -, /, >, ... */
  color: #81a1c1; /* nord9 */
}
advphp.bracket {
  /* [], {}, (), "", ... */
  color: #4c566a; /* nord3 */
}
advphp.delimiter {
  /* , */
  color: #81a1c1; /* nord9 */
}
/* Variables */
advphp.identifier.variable.prefix {
  /* $ */
  color: #d8dee9; /* nord4 */
}
advphp.identifier.variable.name {
  /* $variable */
  color: #d8dee9; /* nord4 */
}
advphp.identifier.variable.this {
  /* $this */
  color: #d8dee9; /* nord4 */
}
/* Functions */
advphp.identifier.function.keyword {
  /* function */
  color: #81a1c1; /* nord9 */
}
advphp.identifier.function.name {
  /* my_function() */
  color: #88c0d0; /* nord8 */
}
advphp.identifier.parameter.prefix {
  /* my_function($parameter) {} */
  color: #d8dee9; /* nord4 */
}
advphp.identifier.parameter.name {
  /* my_function($parameter) {} */
  color: #d8dee9; /* nord4 */
}
/* Objects */
advphp.identifier.object.name {
  /* Object:: */
  color: #8fbcbb; /* nord7 */
}
/* Strings */
advphp.string,
advphp.value.string,
advphp.string.doubleQuote,
advphp.string.singleQuote,
advphp.string.nowdoc,
advphp.string.heredoc {
  /* "string", 'string' */
  color: #a3be8c; /* nord14 */
}
advphp.string.backTic {
  /* `string` */
  color: #a3be8c; /* nord14 */
}

/* The styles below are implemented in the Varia theme, so I've added some colouring for them as well (gwyneth 20200128) */

/* HTML */
html.tag {
  /* < > */
  color: #81a1c1; /* nord9 */
}
html.tag.name {
  /* <meta> <br> */
  color: #8fbcbb; /* nord7 */
}
html.tag.attribute.name {
  color: #8fbcbb; /* nord7 */
  font-style: italic;
}

/* XML */
xml.tag {
  color: #81a1c1; /* nord9 */
}
xml.tag.name {
  color: #8fbcbb; /* nord7 */
}
xml.tag.attribute.name {
  color: #8fbcbb; /* nord7 */
  font-style: italic;
}
xml.tag.attribute.value {
  color: #a3be8c; /* nord14 */
}

/*********************
* JavaScript
*********************/
/* Keywords */
javascript.keyword {
  color: #81a1c1; /* nord9 */
}
javascript.keyword.class {
  color: #81a1c1; /* nord9 */
}
javascript.keyword.extends {
  color: #81a1c1; /* nord9 */
}

/* Identifiers */
javascript.identifier.type.class.name,
javascript.identifier.type.class.superclass {
  color: #5e81ac; /* nord10 */
  text-decoration: none;
  font-weight: normal;
}
javascript.identifier.method,
javascript.identifier.function {
  color: #81a1c1; /* nord9 */
}
javascript.identifier.function.name {
  color: #88c0d0; /* nord8 */
}
javascript.identifier.argument.name {
  color: #d8dee9; /* nord4 */
}
javascript.identifier,
javascript.identifier.name {
  color: #d8dee9; /* nord4 */
}
javascript.identifier.property {
  color: #a3be8c; /* nord14 */
}
javascript.identifier.constant {
  color: #d08770; /* nord12 */
}
javascript.identifier.core.global {
  color: #d8dee9; /* nord4 */
}
javascript.identifier.core.function {
  color: #88c0d0; /* nord8 */
}

/* Values */
javascript.value.null,
javascript.value.boolean,
javascript.value.number.hex,
javascript.value.number {
  color: #b48ead; /* nord15 */
}

/* Strings */
javascript.string.backtick-quoted,
javascript.string.double-quoted,
javascript.string.single-quoted {
  color: #a3be8c; /* nord14 */
}
javascript.string.regex {
  color: #ebcb8b; /* nord13 */
}

/* Operators */
javascript.operator,
javascript.comma,
javascript.semicolon,
javascript.separator {
  color: #81a1c1; /* nord9 */
}

javascript.bracket {
/*  color: #4c566a; /* nord3 */
  color: #eceff4; /* nord6 */
}

/* Go */
/* Delimiter */
go.delimiter {
  color: #81a1c1; /* nord9 */
}
